{{header}}

projectId: 00000000-0000-0000-0000-000000000000

environmentFolderPath: ./env

# Triggered when 'teamsfx provision' is executed
provision:
{{aadAppCreate}}
{{teamsAppCreate}}
{{armDeploy}}
{{azureStorage}}
{{aadAppUpdate}}
{{teamsAppUpdate}}

# Triggered when 'teamsfx deploy' is executed
deploy:
  # Run npm command
  - uses: cli/runNpmCommand
    name: install tab dependencies
    with:
      workingDirectory: tabs
      args: install
  # Run npm command
  - uses: cli/runNpmCommand
    name: build tab app
    env:
      REACT_APP_CLIENT_ID: $\{{AAD_APP_CLIENT_ID}}
      REACT_APP_START_LOGIN_PAGE_URL: $\{{PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__ENDPOINT}}/auth-start.html
      REACT_APP_FUNC_ENDPOINT: $\{{PROVISIONOUTPUT__AZUREFUNCTIONAPIOUTPUT__FUNCTIONENDPOINT}}
      REACT_APP_FUNC_NAME: getUserProfile
    with:
      workingDirectory: tabs
      args: run build --if-present
  # Deploy bits to Azure Storage Static Website
  - uses: azureStorage/deploy
    with:
      workingDirectory: tabs
      # Deploy base folder. This folder includes manifest files for Microsoft Entra app and Teams app that should be ignored using the ignoreFile.
      artifactFolder: build
      # The resource id of the cloud resource to be deployed to. 
      # This key will be generated by arm/deploy action automatically. 
      # You can replace it with your existing Azure Resource id 
      # or add it to your environment variable file.
      resourceId: $\{{PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__STORAGERESOURCEID}}
  # Install development tool(s)
  - uses: devTool/install
    with:      
      dotnet: true
    # Write the information of installed development tool(s) into environment
    # file for the specified environment variable(s).
    writeToEnvironmentFile:
      dotnetPath: DOTNET_PATH
  - uses: cli/runNpmCommand
    name: install api dependencies
    with:
      workingDirectory: api
      args: install
  - uses: cli/runDotnetCommand
    with:
      workingDirectory: api
      args: build extensions.csproj -o bin --ignore-failed-sources
      execPath: $\{{DOTNET_PATH}} # Use dotnet installed by devTool/install action
  - uses: cli/runNpmCommand
    name: build api app
    with:
      workingDirectory: api
      args: run build --if-present
  # Deploy your application to Azure Functions using the zip deploy feature.
  # For additional details, see at https://aka.ms/zip-deploy-to-azure-functions
  - uses: azureFunctions/zipDeploy
    with:
      workingDirectory: api
      # Deploy base folder
      artifactFolder: .
      # Ignore file location, leave blank will ignore nothing
      ignoreFile: .funcignore
      # The resource id of the cloud resource to be deployed to. 
      # This key will be generated by arm/deploy action automatically. 
      # You can replace it with your existing Azure Resource id 
      # or add it to your environment variable file.
      resourceId: $\{{PROVISIONOUTPUT__AZUREFUNCTIONAPIOUTPUT__FUNCTIONAPPRESOURCEID}}

# Triggered when 'teamsfx publish' is executed
publish:
{{teamsAppUpdate}}
{{teamsAppPublish}}