{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Pre Debug Check",
            "dependsOn": [
                "dependency check",
                "start ngrok",
                "prepare dev env"
            ],
            "dependsOrder": "sequence"
        },
        {
            // Check if all required prerequisites are installed and will install them if not.
            // See https://aka.ms/teamsfx-check-prerequisites-task to know the details and how to customize the args.
            "label": "dependency check",
            "type": "teamsfx",
            "command": "debug-check-prerequisites",
            "args": {
                "prerequisites": [
                    "nodejs", // Validate if Node.js is installed.
                    "m365Account", // Sign-in prompt for Microsoft 365 account, then validate if the account enables the sideloading permission.
                    "portOccupancy" // Validate available ports to ensure those debug ones are not occupied.
                ],
                "portOccupancy": [
                    3978, // bot service port
                    9239 // bot inspector port for Node.js debugger
                ]
            }
        },
        {
            // Start the local tunnel service to forward public URL to local port and inspect traffic.
            // See https://aka.ms/teamsfx-tasks/local-tunnel for the detailed args definitions.
            "label": "start ngrok",
            "type": "teamsfx",
            "command": "debug-start-local-tunnel",
            "isBackground": true,
            "dependsOn": [
                "bot npm install"
            ],
            "args": {
                "type": "dev-tunnel",
                "ports": [
                    {
                        "portNumber": 3978,
                        "protocol": "http",
                        "access": "public",
                        "writeToEnvironmentFile": {
                            // Keep consistency with upgraded configuration.
                            "endpoint": "PROVISIONOUTPUT__BOTOUTPUT__SITEENDPOINT",
                            "domain": "PROVISIONOUTPUT__BOTOUTPUT__DOMAIN"
                        }
                    }
                ],
                "env": "local"
            },
            "problemMatcher": "$teamsfx-local-tunnel-watch"
        },
        {
            "label": "prepare dev env",
            "dependsOn": [
                "prepare local environment"
            ],
            "dependsOrder": "parallel"
        },
        {
            "label": "prepare local environment",
            "dependsOn": [
                "Provision",
                "Deploy"
            ],
            "dependsOrder": "sequence"
        },
        {
            // Create the debug resources.
            // See https://aka.ms/teamsfx-tasks/provision to know the details and how to customize the args.
            "label": "Provision",
            "type": "teamsfx",
            "command": "provision",
            "args": {
                "env": "local"
            }
        },
        {
            // Build project.
            // See https://aka.ms/teamsfx-tasks/deploy to know the details and how to customize the args.
            "label": "Deploy",
            "type": "teamsfx",
            "command": "deploy",
            "args": {
                "env": "local"
            }
        },
        {
            "label": "Start Bot",
            "dependsOn": [
                "Start bot"
            ]
        },
        {
            "label": "Start bot",
            "type": "shell",
            "command": "npx env-cmd --silent -f .localConfigs nodemon --inspect=9239 --signal SIGINT index.js",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}/bot"
            },
            "problemMatcher": {
                "pattern": [
                    {
                        "regexp": "^.*$",
                        "file": 0,
                        "location": 1,
                        "message": 2
                    }
                ],
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "[nodemon] starting",
                    "endsPattern": "restify listening to|Bot/ME service listening at|[nodemon] app crashed"
                }
            }
        },
        {
            "label": "bot npm install",
            "type": "shell",
            "command": "npm install",
            "options": {
                "cwd": "${workspaceFolder}/bot"
            }
        }
    ]
}